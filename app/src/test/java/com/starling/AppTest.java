/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.starling;

import java.net.http.HttpClient;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.starling.models.FeedAmount;
import com.starling.models.FeedItem;
import com.starling.models.FeedItems;
import com.starling.services.AccountService;
import com.starling.services.FeedService;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

class AppTest {
    HttpClient client = mock(HttpClient.class);
    AccountService accountService = mock(AccountService.class);
    FeedService feedService = mock(FeedService.class);
    App app = new App(client, accountService, feedService);

    @Test
    void testGetAccountId() throws Exception {
        // Arrange
        when(accountService.getPrimaryAccountId(any())).thenReturn("MockAccountId");

        // Act
        String response = app.getAccountId("Mock token");

        // Assert
        assertEquals("MockAccountId", response);
    }

    @Test
    void testGetFeedItems() throws Exception {
        // Arrange
        FeedItems mockedFeedItems = createMockedFeedItems();
        when(feedService.getFeedItems(any(), any(), any())).thenReturn(mockedFeedItems);
        ObjectMapper objectMapper = new ObjectMapper();
        String mockedFeedItemsJson = objectMapper.writeValueAsString(mockedFeedItems);

        // Act
        String response = app.getFeedItems("MockAccountId", "2021-01-01", "MockToken");

        // Assert
        String expected = mockedFeedItemsJson.replaceAll("\\s", "");
        String actual = response.replaceAll("\\s", "");
        assertEquals(expected, actual);
    }

    private FeedItems createMockedFeedItems() {
        FeedAmount feedAmount = new FeedAmount("USD", 123);
        FeedItem feedItem = new FeedItem("MockFeedItemId", "IN", feedAmount);

        FeedItems feedItems = new FeedItems(new FeedItem[] { feedItem });

        return feedItems;
    }

}