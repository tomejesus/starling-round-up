/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.starling;

import java.net.http.HttpClient;

import com.starling.models.FeedItems;
import com.starling.services.AccountService;
import com.starling.services.RoundUpService;
import com.starling.services.FeedService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class App {
    private static final Logger LOG = LoggerFactory.getLogger(App.class);
    private AccountService accountService;
    private FeedService feedService;

    public App(HttpClient client, AccountService accountService, FeedService feedService) {
        this.accountService = accountService;
        this.feedService = feedService;
    }

    public App(HttpClient client) {
        this.accountService = new AccountService(client, LOG);
        this.feedService = new FeedService(client, LOG);
    }

    public String getAccountId(String bearerToken) {
        try {
            LOG.info("Getting primary account ID.");
            return this.accountService.getPrimaryAccountId(bearerToken);
        } catch (Exception exception) {
            LOG.error("An error occurred getting primary account id: ", exception);
            throw exception;
        }
    }

    public FeedItems getFeedItems(String accountId, String weekStartInputString, String bearerToken) {
        try {
            LOG.info("Getting feed items.");
            return this.feedService.getFeedItems(accountId, weekStartInputString, bearerToken);
        } catch (Exception exception) {
            LOG.error("An error occurred getting feed items: ", exception);
            throw exception;
        }
    }

    public int calculateSavings(FeedItems feedItems) {
        try {
            return RoundUpService.calculateRoundUp(feedItems);
        } catch (Exception exception) {
            LOG.error("An error occurred calculating savings: ", exception);
            throw exception;
        }
    }

    public static void main(String[] args) {
        if (args.length < 2) {
            LOG.error("No arguments provided.");
            System.err.println("Please provide the week start and bearer token as a command line argument.");
            System.exit(1);
        }

        HttpClient client = HttpClient.newHttpClient();
        App app = new App(client);

        String weekStart = args[0];
        String bearerToken = args[1];

        String accountId = app.getAccountId(bearerToken);

        FeedItems feedItems = app.getFeedItems(accountId, weekStart, bearerToken);

        String response = Integer.toString(app.calculateSavings(feedItems));

        System.out.println(response);
    }
}
